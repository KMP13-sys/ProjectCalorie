// lib/src/home/home.dart
//import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import '../componants/navbaruser.dart';
import '../componants/Kcalbar.dart';
import '../componants/camera.dart';
import '../componants/activityfactor.dart';
import '../componants/piegraph.dart';
import '../componants/ListMenu.dart';
import '../componants/ListSport.dart';

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> with WidgetsBindingObserver {
  // Key ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö refresh Kcalbar (‡πÉ‡∏ä‡πâ dynamic ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á private state)
  final GlobalKey _kcalbarKey = GlobalKey();
  bool _isLoading = false;
  bool _hasSelectedActivityLevel =
      false; // ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á

  @override
  void initState() {
    super.initState();
    WidgetsBinding.instance.addObserver(
      this,
    ); // ‡πÄ‡∏û‡∏¥‡πà‡∏° observer ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏°‡∏∑‡πà‡∏≠ app resume
    // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å build ‡πÄ‡∏™‡∏£‡πá‡∏à
    WidgetsBinding.instance.addPostFrameCallback((_) {
      _checkActivityLevelStatus();
    });
  }

  @override
  void dispose() {
    WidgetsBinding.instance.removeObserver(this);
    super.dispose();
  }

  @override
  void didChangeAppLifecycleState(AppLifecycleState state) {
    super.didChangeAppLifecycleState(state);
    // ‡πÄ‡∏ä‡πá‡∏Ñ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠ app ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤ active (‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡∏•‡∏±‡∏á login ‡πÉ‡∏´‡∏°‡πà)
    if (state == AppLifecycleState.resumed) {
      print('üîÑ App resumed, checking activity level status...');
      _checkActivityLevelStatus();
    }
  }

  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á (‡πÄ‡∏ä‡πá‡∏Ñ‡∏à‡∏≤‡∏Å API)
  Future<void> _checkActivityLevelStatus() async {
    print('üîç Checking activity level status...');
    final state = _kcalbarKey.currentState;
    if (state != null) {
      final hasData = await (state as dynamic).hasCalorieData();
      print('üìä Activity level selected: $hasData');
      if (mounted) {
        setState(() {
          _hasSelectedActivityLevel = hasData;
        });
      }
    }
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö refresh Kcalbar ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
  void _refreshKcalbar() {
    final state = _kcalbarKey.currentState;
    if (state != null) {
      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å refresh method ‡∏ú‡πà‡∏≤‡∏ô dynamic
      (state as dynamic).refresh();
    }
    // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà‡∏´‡∏•‡∏±‡∏á refresh
    _checkActivityLevelStatus();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFFDBFFC8),
      body: Column(
        children: [
          // Navbar
          NavBarUser(),

          // Content (‡πÅ‡∏ö‡πà‡∏á‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢-‡∏Ç‡∏ß‡∏≤)
          Expanded(
            child: Row(
              children: [
                // ‡∏ù‡∏±‡πà‡∏á‡∏ã‡πâ‡∏≤‡∏¢ - Kcalbar
                Expanded(
                  flex: 1, // ‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á
                  child: Container(
                    padding: const EdgeInsets.all(16.0),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Kcalbar(
                          key: _kcalbarKey,
                          onRefresh: () {
                            print('‚úÖ Kcalbar refreshed!');
                          },
                        ),

                        const SizedBox(height: 50),

                        const NutritionPieChartComponent(),

                        const SizedBox(height: 50),

                        const ListSportPage(),
                      ],
                    ),
                  ),
                ),

                // ‡∏ù‡∏±‡πà‡∏á‡∏Ç‡∏ß‡∏≤ - Activity Factor & Menu
                Expanded(
                  flex: 1, // ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á
                  child: Container(
                    padding: const EdgeInsets.all(16.0),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        ActivityFactorButton(
                          onCaloriesUpdated: () {
                            // Refresh Kcalbar ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏™‡∏£‡πá‡∏à
                            _refreshKcalbar();
                          },
                        ),

                        const SizedBox(height: 20),

                        const ListMenuPage(),
                      ],
                    ),
                  ),
                ),
              ],
            ),
          ),

          // ‡πÅ‡∏™‡∏î‡∏á Camera button ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡πâ‡∏ß
          if (_hasSelectedActivityLevel) CameraIconButton(),
        ],
      ),
    );
  }
}
