// components/admin/EditFoodModal.tsx

'use client';

import { useState } from 'react';
import { foodService } from '@/app/services/food_service';

type Food = {
  id: number;
  name: string;
  calories: number;
  protein: number;
  carbs: number;
  fat: number;
};

type EditFoodModalProps = {
  food: Food;
  onClose: () => void;
  onSave: () => void;
};

export default function EditFoodModal({ food, onClose, onSave }: EditFoodModalProps) {
  const [formData, setFormData] = useState(food);
  const [saving, setSaving] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      setSaving(true);
      // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ foodService.updateFood ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Backend
      await foodService.updateFood(formData.id, formData);
      alert('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
      onSave();
    } catch (error) {
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!');
      console.error(error);
    } finally {
      setSaving(false);
    }
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
      <div className="bg-white border-4 border-black shadow-lg max-w-md w-full">
        {/* Modal Content */}
        <form onSubmit={handleSubmit} className="p-6">
          <input
            type="text"
            value={formData.name}
            onChange={(e) => setFormData({...formData, name: e.target.value})}
            className="w-full border-2 border-black p-2"
          />
          {/* ... ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ... */}
          
          <button type="submit" disabled={saving}>
            {saving ? 'SAVING...' : 'SAVE'}
          </button>
        </form>
      </div>
    </div>
  );
}
// ```

// **‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà:** ‡πÅ‡∏™‡∏î‡∏á UI, ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å User, ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ service

// ---

// ## üìä ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö:

// | | **food_service** | **EditFoodModal.tsx** |
// |---|---|---|
// | **‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó** | Service/Logic | Component/UI |
// | **‡πÑ‡∏ü‡∏•‡πå** | `services/food_service.ts` | `components/admin/EditFoodModal.tsx` |
// | **‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà** | ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ Backend API | ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ Modal |
// | **‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£** | GET, POST, PUT, DELETE ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• | ‡∏£‡∏±‡∏ö input ‡∏à‡∏≤‡∏Å user |
// | **export** | `export const foodService = {...}` | `export default function EditFoodModal() {...}` |

// ---

// ## üîÑ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå:
// ```
// User ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Edit
//       ‚Üì
// EditFoodModal.tsx (‡πÅ‡∏™‡∏î‡∏á Modal)
//       ‚Üì
// User ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÅ‡∏•‡∏∞‡∏Å‡∏î Save
//       ‚Üì
// EditFoodModal ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å foodService.updateFood()
//       ‚Üì
// food_service ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Backend API
//       ‚Üì
// Backend ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Database
//       ‚Üì
// ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
//       ‚Üì
// EditFoodModal ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à